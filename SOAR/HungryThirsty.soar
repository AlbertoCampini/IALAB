### A simple hungry-thirsty problem space and operators
### 
### The code supplied has these characteristics:
###   - The operators Eat & Drink are proposed iff they're 
###     applicable. that is, Eat if (^hungry yes), Drink if (^thirsty yes)
###   - There is an explicit ^desired on the goal
###   - which is tested by the goal attainment rule
###   - There are hand-written control chunks giving Eat best
### 
### 
###


##
###	I.	Propose the top space
###
### The code in this section proposes a simple space to work in, and a
### simple state to start working in.

sp {ht*propose-space*ht
  (state <s> -^impasse ^superstate nil)
  -->
  (<s> ^name ht-state)
  (<s> ^problem-space <p> ^desired <d>)
  (<p> ^name hungry-thirsty)
  (<d> ^hungry no ^thirsty no)
  (<s> ^thirsty yes ^hungry yes)
}

## Initialise the top state
## simple way to set up the top-state with a separate production
##sp {ht*init-state*ht
##  (state <s> ^problem-space.name hungry-thirsty)
##  -->
##  (<s> ^name ht-state)
##  (<s> ^thirsty yes ^hungry yes)}

## You can put the closing parenthesis on its own line (e.g., in the 
## first production) to show that it is closed, but I generally don't
## to save space. 


###
###	II.	Propose the main operators
###
### The code in this section proposes the two operators eat and drink.

### The third production creates a preference for choosing between
### them.


## Propose eat.


## Propose drink.
sp {ht*propose-op*drink
  (state <s> ^problem-space.name hungry-thirsty )
  (<s> ^thirsty yes)
  -->
  (<s> ^operator <o>)
  (<o> ^name drink)}

## Eat is better if you are hungry and want not to be
sp {ht*compare*eat*better*drink
  (state <s> ^desired <d> ^problem-space.name hungry-thirsty)
  (<s> ^hungry yes)
  (<d> ^hungry no)
  (<s> ^operator <op-eat> +)
  (<op-eat> ^name eat)
  (<s> ^operator <op-drink> +)
  (<op-drink> ^name drink)
  -->
  (<s> ^operator <op-eat> > <op-drink>)}


###
###	III.	Implement the main operators
###

## Implement the operators with productions that modify the state once
## the operators have been selected, and then terminate them after
## they have done

## what they need to do
##
## Note: We make the new value acceptable and reject the previous
## value.

##
## The reconsider preference effectively terminates the operator on 
## the next decision cycle after it has done what its supposed to do.

sp {ht*apply-op*eat
  (state <s>  ^operator <o>)
  (<o> ^name eat)
  (<s> ^hungry yes)
  -->
  (write (crlf) |          chomp chomp... |)
  (<s> ^hungry yes - no +)}

sp {ht*terminate*eat
  (state <s> ^operator <o>)
  (<o> ^name eat)
  (<s> ^hungry no)
  -->
  (<s> ^operator <o> )}


## Implement drink

sp {ht*apply-op*drink
  (state <s>   ^operator <o>)
  (<o> ^name drink)
  (<s> ^thirsty yes)
  -->
  (write (crlf) |          glug glug... |)
  (<s> ^thirsty no + yes -)}

sp {ht*terminate*drink
  (state <s>  ^operator <o>)
  (<o> ^name drink)
  (<s> ^thirsty no)
  -->
  (<s> ^operator <o> )}



###
###	IV.	Noticing when full
###
### This code terminates the problem solving when the goal is reached.


## How to tell if you can stop
sp {ht*evaluate*state*success
  (state <s> ^desired <d> )
  (<d> ^hungry <val>)
  (<s> ^hungry <val>)
  (<d> ^thirsty <val2>)
  (<s> ^thirsty <val2>)

  -->
  (<s> ^success <d>)}


## One of the default rules is brought in to notice that we are 
## finished.  (Slightly modified to be more compact and less general.)

sp {default*top-goal*halt*state*success
    :default
  (state <s>  ^desired <eb>) 
  (<s> ^success <eb>)
  -->
  (write (crlf)  |  goal for  | <s>  | achieved | )
  (halt)}


###---------------------------------------------------------------
###                       END OF FILE
###---------------------------------------------------------------